/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Component;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author naveen
 */
public class HelmetscreenGUI extends javax.swing.JFrame {
      String url = "jdbc:postgresql://192.168.134.5:5432/alertdatabase";
      String user1 = "postgres";
      String password = "ds123";
    /**
     * Creates new form HelmetscreenGUI
     */
    public HelmetscreenGUI() {
        initComponents();
        show_user();
        Fillcombo();
    }
      public ArrayList<User> userList(){
        ArrayList<User> usersList = new ArrayList<>();
   
      try {

            Class.forName("org.postgresql.Driver");
           
            Connection con;
            con = DriverManager.getConnection(url,user1,password);
            String cameraid;
          cameraid = String.valueOf(cameralist.getSelectedItem());
          System.out.println(cameraid);
             String query1 = "SELECT * FROM alerts where camera_id = cameraid";
             Statement st = (Statement) con.createStatement();
             ResultSet rs = st.executeQuery(query1);
             User user;
             while(rs.next()){
                 user = new User(rs.getInt("alert_id"),rs.getString("timestamp"),rs.getInt("horizontal"),rs.getInt("vertical"),rs.getInt("height"),rs.getInt("width"),rs.getInt("camera_id"));
                 usersList.add(user);
             }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        return usersList;
    }
    
    public void show_user(){
        ArrayList <User> list = userList();
        DefaultTableModel model = (DefaultTableModel) jtable_display_alerts.getModel();
        Object[] row = new Object[7];
        for(int i=0;i<list.size();i++){
            row[0] = list.get(i).getalert_id();
            row[1] = list.get(i).gettimestamp();
            row[2] = list.get(i).gethorizontal();
            row[3] = list.get(i).getvertical();
            row[4] = list.get(i).getheight();
            row[5] = list.get(i).getwidth();
            row[6] = list.get(i).getcamera_id();
            model.addRow(row);
        }
    
    }
   
    
    private  void Fillcombo(){
        
        try {

            Class.forName("org.postgresql.Driver"); 
            Connection con;
            con = DriverManager.getConnection(url,user1,password);
             String query1 = "SELECT camera_id FROM camera";
             String query2 = "select table_name from information_schema.tables where table_schema = 'public'";
             Statement st = (Statement) con.createStatement();
             ResultSet rs = st.executeQuery(query1);
             Statement st2 = (Statement) con.createStatement();

             ResultSet rs2 = st2.executeQuery(query2);
             
      
             while(rs.next()){
                 String number;
                number = rs.getString("camera_id");
             
                cameralist.addItem(number);
                
             }
             
              //while(rs2.next()){
                  
                  //int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }; 
                 String []tablenames = new String[]{"New Alerts","Accepted Alerts","Rejected Alerts"};
          
               // tablenames = rs2.getString("table_name");
              
                System.out.println(tablenames);
                tablelist.addItem(tablenames[0]);
                tablelist.addItem(tablenames[1]);
                tablelist.addItem(tablenames[2]);
             
            

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IPlabel = new javax.swing.JLabel();
        iptextfield = new javax.swing.JTextField();
        portlabel = new javax.swing.JLabel();
        porttextfield = new javax.swing.JTextField();
        usernamelabel = new javax.swing.JLabel();
        usernametextfield = new javax.swing.JTextField();
        passwordlabel = new javax.swing.JLabel();
        passwordtextfield = new javax.swing.JTextField();
        databaselabel = new javax.swing.JLabel();
        databasetextfield = new javax.swing.JTextField();
        connectbutton = new javax.swing.JButton();
        cameralist = new javax.swing.JComboBox<>();
        tablelist = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_display_alerts = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        acceptbutton = new javax.swing.JButton();
        revokebutton = new javax.swing.JButton();
        rejectbutton = new javax.swing.JButton();
        cameralabel = new javax.swing.JLabel();
        tablelistlabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        IPlabel.setText("IP");

        iptextfield.setText("192.168.134.5");
        iptextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptextfieldActionPerformed(evt);
            }
        });

        portlabel.setText("Port");

        porttextfield.setText("5432");

        usernamelabel.setText("Username");

        usernametextfield.setText("postgres");
        usernametextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernametextfieldActionPerformed(evt);
            }
        });

        passwordlabel.setText("Password");

        passwordtextfield.setText(" ");
        passwordtextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordtextfieldActionPerformed(evt);
            }
        });

        databaselabel.setText("Database");

        databasetextfield.setText("alertdatabase");
        databasetextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databasetextfieldActionPerformed(evt);
            }
        });

        connectbutton.setText("Connect");
        connectbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectbuttonActionPerformed(evt);
            }
        });

        cameralist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameralistActionPerformed(evt);
            }
        });

        tablelist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablelistActionPerformed(evt);
            }
        });

        jtable_display_alerts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "alert_id", "timestamp", "horizontal", "vertical", "height", "width", "camera_id"
            }
        ));
        jScrollPane1.setViewportView(jtable_display_alerts);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );

        acceptbutton.setText("accept");
        acceptbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptbuttonActionPerformed(evt);
            }
        });

        revokebutton.setText("revoke");
        revokebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revokebuttonActionPerformed(evt);
            }
        });

        rejectbutton.setText("reject");

        cameralabel.setText("Camera");

        tablelistlabel.setText("Tablelist");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usernamelabel)
                                    .addComponent(IPlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernametextfield)
                                    .addComponent(iptextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(acceptbutton)))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(rejectbutton))
                                    .addComponent(porttextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordtextfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordlabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addComponent(revokebutton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(databasetextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(connectbutton))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tablelistlabel)
                                            .addComponent(cameralist, 0, 136, Short.MAX_VALUE)
                                            .addComponent(tablelist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(portlabel)
                                .addGap(118, 118, 118)
                                .addComponent(databaselabel)
                                .addGap(71, 71, 71)
                                .addComponent(cameralabel)))
                        .addGap(0, 5, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IPlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(portlabel)
                            .addComponent(databaselabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cameralabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(iptextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(porttextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(databasetextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cameralist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(passwordlabel)
                                    .addComponent(usernamelabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(usernametextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(connectbutton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(tablelistlabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tablelist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceptbutton)
                            .addComponent(revokebutton)
                            .addComponent(rejectbutton))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iptextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptextfieldActionPerformed
                // TODO add your handling code here:
         
    }//GEN-LAST:event_iptextfieldActionPerformed

    private void acceptbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptbuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptbuttonActionPerformed

    private void usernametextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernametextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernametextfieldActionPerformed

    private void passwordtextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordtextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordtextfieldActionPerformed

    private void revokebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revokebuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_revokebuttonActionPerformed

    private void connectbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectbuttonActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_connectbuttonActionPerformed

    private void cameralistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameralistActionPerformed
        // TODO add your handling code here:
        String cameraid;
          cameraid = String.valueOf(cameralist.getSelectedItem());
          System.out.println(cameraid);
         
          
    }//GEN-LAST:event_cameralistActionPerformed
  
    private void tablelistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablelistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablelistActionPerformed

    private void databasetextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databasetextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_databasetextfieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HelmetscreenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HelmetscreenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HelmetscreenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HelmetscreenGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HelmetscreenGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IPlabel;
    private javax.swing.JButton acceptbutton;
    private javax.swing.JLabel cameralabel;
    private javax.swing.JComboBox<String> cameralist;
    private javax.swing.JButton connectbutton;
    private javax.swing.JLabel databaselabel;
    private javax.swing.JTextField databasetextfield;
    private javax.swing.JTextField iptextfield;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtable_display_alerts;
    private javax.swing.JLabel passwordlabel;
    private javax.swing.JTextField passwordtextfield;
    private javax.swing.JLabel portlabel;
    private javax.swing.JTextField porttextfield;
    private javax.swing.JButton rejectbutton;
    private javax.swing.JButton revokebutton;
    private javax.swing.JComboBox<String> tablelist;
    private javax.swing.JLabel tablelistlabel;
    private javax.swing.JLabel usernamelabel;
    private javax.swing.JTextField usernametextfield;
    // End of variables declaration//GEN-END:variables
}
